{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Playlist v2 - beta",
    "description" : "The Playlist API v2 provides a set of JSON:API compatible endpoints for accessing and managing various playlists",
    "contact" : {
      "url" : "https://github.com/orgs/tidal-music/discussions"
    },
    "version" : "1.0.0",
    "x-url-compatible-spec-id" : "user-playlist-v2"
  },
  "externalDocs" : {
    "description" : "TIDAL Developer Documentation",
    "url" : "https://developer.tidal.com/documentation"
  },
  "servers" : [ {
    "url" : "https://openapi.tidal.com/v2",
    "description" : "Production"
  } ],
  "tags" : [ {
    "name" : "Playlists"
  } ],
  "paths" : {
    "/playlists/{id}" : {
      "get" : {
        "tags" : [ "Playlists" ],
        "summary" : "Get single playlist",
        "description" : "Retrieves playlist details by an unique id.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Playlist id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "550e8400-e29b-41d4-a716-446655440000"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code, only required if using client credentials",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: items, owners",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "items"
            }
          },
          "example" : "items"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Playlists_Single_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "playlists.read", "r_usr" ]
        } ],
        "x-endpoint-properties" : {
          "url-compatible-unique-name" : "get-single-playlist",
          "json-api-available-relationships" : [ "items", "owners" ]
        }
      },
      "delete" : {
        "tags" : [ "Playlists" ],
        "summary" : "Delete single playlist",
        "description" : "Deletes the existing instance of playlist's resource.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Playlist id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "550e8400-e29b-41d4-a716-446655440000"
        } ],
        "responses" : {
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "playlists.write", "w_usr" ]
        } ]
      },
      "patch" : {
        "tags" : [ "Playlists" ],
        "summary" : "Update single playlist",
        "description" : "Updates the existing instance of playlist's resource.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Playlist id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "550e8400-e29b-41d4-a716-446655440000"
        } ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdatePlaylistBody"
              }
            }
          }
        },
        "responses" : {
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "playlists.write" ]
        } ]
      }
    },
    "/playlists" : {
      "get" : {
        "tags" : [ "Playlists" ],
        "summary" : "Get all playlists",
        "description" : "Retrieves all playlist details by available filters or without (if applicable).",
        "parameters" : [ {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code, only required if using client credentials",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: items, owners",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "items"
            }
          },
          "example" : "items"
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "Playlist id",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "550e8400-e29b-41d4-a716-446655440000"
            }
          },
          "example" : "550e8400-e29b-41d4-a716-446655440000"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Playlists_Multi_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "playlists.read", "r_usr" ]
        } ],
        "x-endpoint-properties" : {
          "url-compatible-unique-name" : "get-all-playlists",
          "json-api-available-relationships" : [ "items", "owners" ],
          "json-api-available-filters" : [ {
            "name" : "id",
            "example" : "550e8400-e29b-41d4-a716-446655440000",
            "description" : "Playlist id"
          } ]
        }
      },
      "post" : {
        "tags" : [ "Playlists" ],
        "summary" : "Create single playlist",
        "description" : "Creates a new instance of playlist's resource.",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/vnd.api+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreatePlaylistBody"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Playlists_Single_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "playlists.write", "w_usr" ]
        } ]
      }
    },
    "/playlists/me" : {
      "get" : {
        "tags" : [ "Playlists" ],
        "summary" : "Get current user's playlist data",
        "description" : "Retrieves current user's playlist details.",
        "parameters" : [ {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: items, owners",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "items"
            }
          },
          "example" : "items"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Playlists_Multi_Data_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Authorization_Code_PKCE" : [ "playlists.read", "r_usr" ]
        } ],
        "x-endpoint-properties" : {
          "url-compatible-unique-name" : "get-my-playlist-data",
          "json-api-available-relationships" : [ "items", "owners" ]
        }
      }
    },
    "/playlists/{id}/relationships/items" : {
      "get" : {
        "tags" : [ "Playlists" ],
        "summary" : "Relationship: items",
        "description" : "Retrieves items relationship details of the related playlist resource.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Playlist id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "550e8400-e29b-41d4-a716-446655440000"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code, only required if using client credentials",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: items",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "items"
            }
          },
          "example" : "items"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Playlists_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "playlists.read", "r_usr" ]
        } ],
        "x-endpoint-properties" : {
          "url-compatible-unique-name" : "get-playlist-items-relationship",
          "json-api-available-relationships" : [ "items" ]
        }
      }
    },
    "/playlists/{id}/relationships/owners" : {
      "get" : {
        "tags" : [ "Playlists" ],
        "summary" : "Relationship: owners",
        "description" : "Retrieves owners relationship details of the related playlist resource.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Playlist id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "550e8400-e29b-41d4-a716-446655440000"
        }, {
          "name" : "countryCode",
          "in" : "query",
          "description" : "ISO 3166-1 alpha-2 country code, only required if using client credentials",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "example" : "US"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Allows the client to customize which related resources should be returned. Available options: owners",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "owners"
            }
          },
          "example" : "owners"
        }, {
          "name" : "page[cursor]",
          "in" : "query",
          "description" : "Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Playlists_Multi_Data_Relationship_Document"
                }
              }
            }
          },
          "451" : {
            "description" : "Unavailable For Legal Reasons",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unavailable_For_Legal_Reasons_Doc" : {
                    "$ref" : "#/components/examples/Unavailable_For_Legal_Reasons_Doc"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request on client party. Ensure the proper HTTP request is sent (query parameters, request body, etc.).",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Bad_Request_Error_Doc" : {
                    "$ref" : "#/components/examples/Bad_Request_Error_Doc"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error. Something went wrong on the server party.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Internal_Server_Error_Doc" : {
                    "$ref" : "#/components/examples/Internal_Server_Error_Doc"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found. The requested resource is not found.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Resource_Not_Found_Error_Doc" : {
                    "$ref" : "#/components/examples/Resource_Not_Found_Error_Doc"
                  }
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The API is using content negotiation. Ensure the proper media type is set into Content-Type header.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Unsupported_Media_Type_Error_Doc" : {
                    "$ref" : "#/components/examples/Unsupported_Media_Type_Error_Doc"
                  }
                }
              }
            }
          },
          "405" : {
            "description" : "Method not supported. Ensure a proper HTTP method for an HTTP request is used.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Method_Not_Supported_Error_Doc" : {
                    "$ref" : "#/components/examples/Method_Not_Supported_Error_Doc"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable. The server doesn't support any of the requested by client acceptable content types.",
            "content" : {
              "application/vnd.api+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error_Document"
                },
                "examples" : {
                  "Not_Acceptable_Error_Doc" : {
                    "$ref" : "#/components/examples/Not_Acceptable_Error_Doc"
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too many HTTP requests have been made within the allowed time.",
            "headers" : {
              "X-RateLimit-Remaining" : {
                "description" : "Number of tokens currently remaining. Refer to X-RateLimit-Replenish-Rate header for replenishment information.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Burst-Capacity" : {
                "description" : "Initial number of tokens, and max number of tokens that can be replenished.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "20"
              },
              "X-RateLimit-Replenish-Rate" : {
                "description" : "Number of tokens replenished per second.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              },
              "X-RateLimit-Requested-Tokens" : {
                "description" : "Request cost in tokens.",
                "required" : true,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "example" : "5"
              }
            }
          }
        },
        "security" : [ {
          "Client_Credentials" : [ ]
        }, {
          "Authorization_Code_PKCE" : [ "playlists.read", "r_usr" ]
        } ],
        "x-endpoint-properties" : {
          "url-compatible-unique-name" : "get-playlist-owners-relationship",
          "json-api-available-relationships" : [ "owners" ]
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Error_Document" : {
        "type" : "object",
        "properties" : {
          "errors" : {
            "type" : "array",
            "description" : "array of error objects",
            "items" : {
              "$ref" : "#/components/schemas/Error_Object"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        },
        "description" : "JSON:API error document object"
      },
      "Error_Object" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "unique identifier for this particular occurrence of the problem"
          },
          "status" : {
            "type" : "string",
            "description" : "HTTP status code applicable to this problem"
          },
          "code" : {
            "type" : "string",
            "description" : "application-specific error code"
          },
          "detail" : {
            "type" : "string",
            "description" : "human-readable explanation specific to this occurrence of the problem"
          },
          "source" : {
            "$ref" : "#/components/schemas/Error_Object_Source"
          }
        },
        "description" : "JSON:API error object"
      },
      "Error_Object_Source" : {
        "type" : "object",
        "properties" : {
          "pointer" : {
            "type" : "string",
            "description" : "a JSON Pointer [RFC6901] to the value in the request document that caused the error",
            "example" : "/data/attributes/title"
          },
          "parameter" : {
            "type" : "string",
            "description" : "string indicating which URI query parameter caused the error.",
            "example" : "countryCode"
          },
          "header" : {
            "type" : "string",
            "description" : "string indicating the name of a single request header which caused the error",
            "example" : "X-some-custom-header"
          }
        },
        "description" : "object containing references to the primary source of the error"
      },
      "Links" : {
        "required" : [ "self" ],
        "type" : "object",
        "properties" : {
          "self" : {
            "type" : "string",
            "description" : "the link that generated the current response document",
            "example" : "/artists/xyz/relationships/tracks"
          },
          "next" : {
            "type" : "string",
            "description" : "the next page of data (pagination)",
            "example" : "/artists/xyz/relationships/tracks?page[cursor]=zyx"
          }
        },
        "description" : "Links JSON:API object"
      },
      "UserPublicProfilePicks_Attributes" : {
        "required" : [ "colors", "description", "supportedContentType", "title" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "Pick title",
            "example" : "My favorite track on repeat"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of pick",
            "example" : "This is the track I listen to when I need to focus"
          },
          "supportedContentType" : {
            "type" : "string",
            "description" : "CatalogueResourceType for supported item for the pick",
            "example" : "TRACK",
            "enum" : [ "TRACKS", "VIDEOS", "ALBUMS", "ARTISTS", "PROVIDERS", "ARTIST_ROLES" ]
          },
          "colors" : {
            "$ref" : "#/components/schemas/Prompt_Colors"
          },
          "lastModifiedAt" : {
            "type" : "string",
            "description" : "Date of last modification of the pick (ISO 8601)",
            "format" : "date-time",
            "example" : "2021-08-31T12:00:00Z"
          }
        }
      },
      "Prompt_Colors" : {
        "required" : [ "primary", "secondary" ],
        "type" : "object",
        "properties" : {
          "primary" : {
            "type" : "string",
            "description" : "Primary color to visually render the pick",
            "example" : "#FF0000"
          },
          "secondary" : {
            "type" : "string",
            "description" : "Secondary color to visually render the pick",
            "example" : "#00FF00"
          }
        },
        "description" : "Primary and Secondary color to visually render the pick"
      },
      "Multi_Data_Relationship_Doc" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Resource_Identifier" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          }
        },
        "description" : "Resource identifier JSON:API object"
      },
      "Singleton_Data_Relationship_Doc" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Resource_Identifier"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "UserPublicProfilePicks_Relationships" : {
        "required" : [ "item", "userPublicProfile" ],
        "properties" : {
          "userPublicProfile" : {
            "$ref" : "#/components/schemas/Singleton_Data_Relationship_Doc"
          },
          "item" : {
            "$ref" : "#/components/schemas/Singleton_Data_Relationship_Doc"
          }
        }
      },
      "UserPublicProfilePicks_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/UserPublicProfilePicks_Attributes"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/UserPublicProfilePicks_Relationships"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          }
        }
      },
      "Artists_Attributes" : {
        "required" : [ "name", "popularity" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Artist name",
            "example" : "JAY Z"
          },
          "popularity" : {
            "type" : "number",
            "description" : "Artist popularity (ranged in 0.00 ... 1.00). Conditionally visible",
            "format" : "double",
            "example" : 0.56
          },
          "imageLinks" : {
            "type" : "array",
            "description" : "Represents available links to, and metadata about, an artist images",
            "items" : {
              "$ref" : "#/components/schemas/Catalogue_Item_Image_Link"
            }
          },
          "externalLinks" : {
            "type" : "array",
            "description" : "Represents available links to something that is related to an artist resource, but external to the TIDAL API",
            "items" : {
              "$ref" : "#/components/schemas/Catalogue_Item_External_Link"
            }
          },
          "roles" : {
            "type" : "array",
            "description" : "Artist roles",
            "deprecated" : true,
            "items" : {
              "type" : "string",
              "enum" : [ "ARTIST", "SONGWRITER", "ENGINEER", "PRODUCTION_TEAM", "PERFORMER", "PRODUCER", "MISC" ]
            }
          }
        }
      },
      "Catalogue_Item_External_Link" : {
        "required" : [ "href", "meta" ],
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "link to something that is related to a resource",
            "example" : "https://tidal.com/browse/artist/1566"
          },
          "meta" : {
            "$ref" : "#/components/schemas/External_Link_Meta"
          }
        }
      },
      "Catalogue_Item_Image_Link" : {
        "required" : [ "href", "meta" ],
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "link to an image",
            "example" : "https://resources.tidal.com/images/717dfdae/beb0/4aea/a553/a70064c30386/80x80.jpg"
          },
          "meta" : {
            "$ref" : "#/components/schemas/Image_Link_Meta"
          }
        }
      },
      "External_Link_Meta" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "external link type",
            "example" : "TIDAL_SHARING",
            "enum" : [ "TIDAL_SHARING", "TIDAL_AUTOPLAY_ANDROID", "TIDAL_AUTOPLAY_IOS", "TIDAL_AUTOPLAY_WEB", "TWITTER", "FACEBOOK", "INSTAGRAM", "TIKTOK", "SNAPCHAT", "HOMEPAGE" ]
          }
        },
        "description" : "metadata about an external link"
      },
      "Image_Link_Meta" : {
        "required" : [ "height", "width" ],
        "type" : "object",
        "properties" : {
          "width" : {
            "type" : "integer",
            "description" : "image width (in pixels)",
            "format" : "int32",
            "example" : 80
          },
          "height" : {
            "type" : "integer",
            "description" : "image height (in pixels)",
            "format" : "int32",
            "example" : 80
          }
        },
        "description" : "metadata about an image"
      },
      "Artists_Relationships" : {
        "required" : [ "albums", "radio", "roles", "similarArtists", "trackProviders", "tracks", "videos" ],
        "properties" : {
          "similarArtists" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "albums" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "roles" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "videos" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "trackProviders" : {
            "$ref" : "#/components/schemas/Artists_TrackProviders_Multi_Data_Relationship_Document"
          },
          "tracks" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "radio" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          }
        }
      },
      "Artists_TrackProviders_Multi_Data_Relationship_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Artists_TrackProviders_Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Artists_TrackProviders_Resource_Identifier" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/Artists_TrackProviders_Resource_Identifier_Meta"
          }
        },
        "description" : "Resource identifier JSON:API object"
      },
      "Artists_TrackProviders_Resource_Identifier_Meta" : {
        "required" : [ "numberOfTracks" ],
        "type" : "object",
        "properties" : {
          "numberOfTracks" : {
            "type" : "integer",
            "description" : "total number of tracks released together with the provider",
            "format" : "int64",
            "example" : 14
          }
        }
      },
      "Artists_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/Artists_Attributes"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/Artists_Relationships"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          }
        }
      },
      "Tracks_Attributes" : {
        "required" : [ "duration", "explicit", "isrc", "mediaTags", "popularity", "title" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "Album item's title",
            "example" : "Kill Jay Z"
          },
          "version" : {
            "type" : "string",
            "description" : "Version of the album's item; complements title",
            "example" : "Kill Jay Z"
          },
          "isrc" : {
            "type" : "string",
            "description" : "ISRC code",
            "example" : "TIDAL2274"
          },
          "duration" : {
            "type" : "string",
            "description" : "Duration expressed in accordance with ISO 8601",
            "example" : "P30M5S"
          },
          "copyright" : {
            "type" : "string",
            "description" : "Copyright information",
            "example" : "(p)(c) 2017 S. CARTER ENTERPRISES, LLC. MARKETED BY ROC NATION & DISTRIBUTED BY ROC NATION/UMG RECORDINGS INC."
          },
          "explicit" : {
            "type" : "boolean",
            "description" : "Indicates whether a catalog item consist of any explicit content",
            "example" : false
          },
          "popularity" : {
            "type" : "number",
            "description" : "Track or video popularity (ranged in 0.00 ... 1.00). Conditionally visible",
            "format" : "double",
            "example" : 0.56
          },
          "availability" : {
            "type" : "array",
            "description" : "Defines a catalog item availability e.g. for streaming, DJs, stems",
            "items" : {
              "type" : "string",
              "enum" : [ "STREAM", "DJ", "STEM" ]
            }
          },
          "mediaTags" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Media metadata tags",
              "example" : "LOSSLESS"
            }
          },
          "externalLinks" : {
            "type" : "array",
            "description" : "Represents available links to something that is related to a catalog item, but external to the TIDAL API",
            "items" : {
              "$ref" : "#/components/schemas/Catalogue_Item_External_Link"
            }
          }
        }
      },
      "Tracks_Relationships" : {
        "required" : [ "albums", "artists", "providers", "radio", "similarTracks" ],
        "properties" : {
          "albums" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "artists" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "similarTracks" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "providers" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "radio" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          }
        }
      },
      "Tracks_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/Tracks_Attributes"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/Tracks_Relationships"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          }
        }
      },
      "UserCollections_Attributes" : {
        "type" : "object"
      },
      "UserCollections_Relationships" : {
        "required" : [ "albums", "artists", "playlists" ],
        "properties" : {
          "albums" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "artists" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "playlists" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          }
        }
      },
      "UserCollections_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/UserCollections_Attributes"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/UserCollections_Relationships"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          }
        }
      },
      "Playlists_Attributes" : {
        "required" : [ "bounded", "createdAt", "externalLinks", "imageLinks", "lastModifiedAt", "name", "playlistType", "privacy" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Playlist name",
            "example" : "My Playlist"
          },
          "description" : {
            "type" : "string",
            "description" : "Playlist description",
            "example" : "All the good details about what is inside this playlist"
          },
          "bounded" : {
            "type" : "boolean",
            "description" : "Indicates if the playlist has a duration and set number of tracks",
            "example" : true
          },
          "duration" : {
            "type" : "string",
            "description" : "Duration of the playlist expressed in accordance with ISO 8601",
            "example" : "P30M5S"
          },
          "numberOfItems" : {
            "type" : "integer",
            "description" : "Number of items in the playlist",
            "format" : "int32",
            "example" : 5
          },
          "externalLinks" : {
            "type" : "array",
            "description" : "Sharing links to the playlist",
            "example" : true,
            "items" : {
              "$ref" : "#/components/schemas/Playlists_External_Link"
            }
          },
          "imageLinks" : {
            "type" : "array",
            "description" : "Images associated with the playlist",
            "example" : true,
            "items" : {
              "$ref" : "#/components/schemas/Playlists_Image_Link"
            }
          },
          "createdAt" : {
            "type" : "string",
            "description" : "Datetime of playlist creation (ISO 8601)",
            "format" : "date-time"
          },
          "lastModifiedAt" : {
            "type" : "string",
            "description" : "Datetime of last modification of the playlist (ISO 8601)",
            "format" : "date-time"
          },
          "privacy" : {
            "type" : "string",
            "description" : "Privacy setting of the playlist",
            "example" : "PUBLIC"
          },
          "playlistType" : {
            "type" : "string",
            "description" : "The type of the playlist",
            "example" : "EDITORIAL"
          }
        }
      },
      "Playlists_External_Link" : {
        "required" : [ "href", "meta" ],
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "link to something that is related to a resource",
            "example" : "https://tidal.com/browse/artist/1566"
          },
          "meta" : {
            "$ref" : "#/components/schemas/External_Link_Meta"
          }
        },
        "description" : "Sharing links to the playlist",
        "example" : true
      },
      "Playlists_Image_Link" : {
        "required" : [ "href" ],
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "link to an image",
            "example" : "https://resources.tidal.com/images/717dfdae/beb0/4aea/a553/a70064c30386/80x80.jpg"
          },
          "meta" : {
            "$ref" : "#/components/schemas/Image_Link_Meta"
          }
        },
        "description" : "Images associated with the playlist",
        "example" : true
      },
      "Playlists_Relationships" : {
        "required" : [ "items", "owners" ],
        "properties" : {
          "owners" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "items" : {
            "$ref" : "#/components/schemas/Playlists_Items_Multi_Data_Relationship_Document"
          }
        }
      },
      "Playlists_Items_Multi_Data_Relationship_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Playlists_Items_Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Playlists_Items_Resource_Identifier" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/Playlists_Items_Resource_Identifier_Meta"
          }
        },
        "description" : "Resource identifier JSON:API object"
      },
      "Playlists_Items_Resource_Identifier_Meta" : {
        "type" : "object",
        "properties" : {
          "itemId" : {
            "type" : "string",
            "description" : "Unique identifier of the item in a playlist",
            "example" : "1234567890"
          },
          "addedAt" : {
            "type" : "string",
            "description" : "When the item was added to the playlist",
            "format" : "date-time",
            "example" : "2021-08-01T00:00:00Z"
          }
        }
      },
      "Playlists_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/Playlists_Attributes"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/Playlists_Relationships"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          }
        }
      },
      "Playlists_Single_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Playlists_Resource"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Tracks_Resource"
              }, {
                "$ref" : "#/components/schemas/Videos_Resource"
              }, {
                "$ref" : "#/components/schemas/Artists_Resource"
              }, {
                "$ref" : "#/components/schemas/Users_Resource"
              } ]
            }
          }
        }
      },
      "ResourceObjectObject" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "type" : "object"
          },
          "relationships" : {
            "type" : "object"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          }
        }
      },
      "Playlists_Multi_Data_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Playlists_Resource"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Tracks_Resource"
              }, {
                "$ref" : "#/components/schemas/Videos_Resource"
              }, {
                "$ref" : "#/components/schemas/Artists_Resource"
              }, {
                "$ref" : "#/components/schemas/Users_Resource"
              } ]
            }
          }
        }
      },
      "Playlists_Multi_Data_Relationship_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Tracks_Resource"
              }, {
                "$ref" : "#/components/schemas/Videos_Resource"
              }, {
                "$ref" : "#/components/schemas/Artists_Resource"
              }, {
                "$ref" : "#/components/schemas/Users_Resource"
              }, {
                "$ref" : "#/components/schemas/Playlists_Resource"
              } ]
            }
          }
        }
      },
      "UserPublicProfiles_Attributes" : {
        "required" : [ "color" ],
        "type" : "object",
        "properties" : {
          "handle" : {
            "type" : "string",
            "description" : "A customizable handle for the user profile",
            "example" : "@johnSmith"
          },
          "profileName" : {
            "type" : "string",
            "description" : "Public Name of the user profile",
            "example" : "JohnSmith"
          },
          "picture" : {
            "$ref" : "#/components/schemas/User_Public_Profiles_Image_Link"
          },
          "color" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Color information for the user profile when no image is available",
              "example" : "326650"
            }
          },
          "externalLinks" : {
            "type" : "array",
            "description" : "ExternalLinks for the user's profile",
            "items" : {
              "$ref" : "#/components/schemas/User_Public_Profiles_External_Link"
            }
          },
          "numberOfFollowers" : {
            "type" : "integer",
            "description" : "Number of followers for the user",
            "format" : "int32",
            "example" : 32
          },
          "numberOfFollows" : {
            "type" : "integer",
            "description" : "Number of users the user follows",
            "format" : "int32",
            "example" : 32
          }
        }
      },
      "User_Public_Profiles_External_Link" : {
        "required" : [ "href", "meta" ],
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "link to something that is related to a resource",
            "example" : "https://tidal.com/browse/artist/1566"
          },
          "meta" : {
            "$ref" : "#/components/schemas/User_Public_Profiles_External_Link_Meta"
          }
        }
      },
      "User_Public_Profiles_External_Link_Meta" : {
        "required" : [ "handle", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "external link type",
            "example" : "TIDAL_SHARING",
            "enum" : [ "TIDAL_SHARING", "TIDAL_AUTOPLAY_ANDROID", "TIDAL_AUTOPLAY_IOS", "TIDAL_AUTOPLAY_WEB", "TWITTER", "FACEBOOK", "INSTAGRAM", "TIKTOK", "SNAPCHAT", "HOMEPAGE" ]
          },
          "handle" : {
            "type" : "string",
            "description" : "external link handle",
            "example" : "JohnSmith"
          }
        },
        "description" : "metadata about an external link"
      },
      "User_Public_Profiles_Image_Link" : {
        "required" : [ "href" ],
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "link to an image",
            "example" : "https://resources.tidal.com/images/717dfdae/beb0/4aea/a553/a70064c30386/80x80.jpg"
          },
          "meta" : {
            "$ref" : "#/components/schemas/Image_Link_Meta"
          }
        },
        "description" : "ImageLink to the users image"
      },
      "UserPublicProfiles_Relationships" : {
        "required" : [ "followers", "following", "publicPicks", "publicPlaylists" ],
        "properties" : {
          "followers" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "following" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "publicPlaylists" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "publicPicks" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          }
        }
      },
      "UserPublicProfiles_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/UserPublicProfiles_Attributes"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/UserPublicProfiles_Relationships"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          }
        }
      },
      "Albums_Attributes" : {
        "required" : [ "barcodeId", "duration", "explicit", "mediaTags", "numberOfItems", "numberOfVolumes", "popularity", "title", "type" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "Original title",
            "example" : "4:44"
          },
          "barcodeId" : {
            "type" : "string",
            "description" : "Barcode id (EAN-13 or UPC-A)",
            "example" : "00854242007552"
          },
          "numberOfVolumes" : {
            "type" : "integer",
            "description" : "Number of volumes",
            "format" : "int32",
            "example" : 1
          },
          "numberOfItems" : {
            "type" : "integer",
            "description" : "Number of album items",
            "format" : "int32",
            "example" : 13
          },
          "duration" : {
            "type" : "string",
            "description" : "Duration (ISO-8601)",
            "example" : "P41M5S"
          },
          "explicit" : {
            "type" : "boolean",
            "description" : "Indicates whether an album consist of any explicit content",
            "example" : true
          },
          "releaseDate" : {
            "type" : "string",
            "description" : "Release date (ISO-8601)",
            "format" : "date",
            "example" : "2017-06-30"
          },
          "copyright" : {
            "type" : "string",
            "description" : "Copyright information",
            "example" : "(p)(c) 2017 S. CARTER ENTERPRISES, LLC. MARKETED BY ROC NATION & DISTRIBUTED BY ROC NATION/UMG RECORDINGS INC."
          },
          "popularity" : {
            "type" : "number",
            "description" : "Album popularity (ranged in 0.00 ... 1.00). Conditionally visible",
            "format" : "double",
            "example" : 0.56
          },
          "availability" : {
            "type" : "array",
            "description" : "Defines an album availability e.g. for streaming, DJs, stems",
            "items" : {
              "type" : "string",
              "enum" : [ "STREAM", "DJ", "STEM" ]
            }
          },
          "mediaTags" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Media metadata tags",
              "example" : "LOSSLESS"
            }
          },
          "imageLinks" : {
            "type" : "array",
            "description" : "Represents available links to, and metadata about, an album cover images",
            "items" : {
              "$ref" : "#/components/schemas/Catalogue_Item_Image_Link"
            }
          },
          "videoLinks" : {
            "type" : "array",
            "description" : "Represents available links to, and metadata about, an album cover videos",
            "items" : {
              "$ref" : "#/components/schemas/Catalogue_Item_Video_Link"
            }
          },
          "externalLinks" : {
            "type" : "array",
            "description" : "Represents available links to something that is related to an album resource, but external to the TIDAL API",
            "items" : {
              "$ref" : "#/components/schemas/Catalogue_Item_External_Link"
            }
          },
          "type" : {
            "type" : "string",
            "description" : "Album type, e.g. single, regular album, or extended play",
            "enum" : [ "ALBUM", "EP", "SINGLE" ]
          }
        }
      },
      "Catalogue_Item_Video_Link" : {
        "required" : [ "href", "meta" ],
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "link to a video",
            "example" : "https://resources.tidal.com/images/717dfdae/beb0/4aea/a553/a70064c30386/80x80.mp4"
          },
          "meta" : {
            "$ref" : "#/components/schemas/Video_Link_Meta"
          }
        }
      },
      "Video_Link_Meta" : {
        "required" : [ "height", "width" ],
        "type" : "object",
        "properties" : {
          "width" : {
            "type" : "integer",
            "description" : "video width (in pixels)",
            "format" : "int32",
            "example" : 80
          },
          "height" : {
            "type" : "integer",
            "description" : "video height (in pixels)",
            "format" : "int32",
            "example" : 80
          }
        },
        "description" : "metadata about a video"
      },
      "Albums_Relationships" : {
        "required" : [ "artists", "items", "providers", "similarAlbums" ],
        "properties" : {
          "artists" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "similarAlbums" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "items" : {
            "$ref" : "#/components/schemas/Albums_Items_Multi_Data_Relationship_Document"
          },
          "providers" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          }
        }
      },
      "Albums_Items_Multi_Data_Relationship_Document" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Albums_Items_Resource_Identifier"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Albums_Items_Resource_Identifier" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/Albums_Items_Resource_Identifier_Meta"
          }
        },
        "description" : "Resource identifier JSON:API object"
      },
      "Albums_Items_Resource_Identifier_Meta" : {
        "required" : [ "trackNumber", "volumeNumber" ],
        "type" : "object",
        "properties" : {
          "volumeNumber" : {
            "type" : "integer",
            "description" : "volume number",
            "format" : "int32",
            "example" : 1
          },
          "trackNumber" : {
            "type" : "integer",
            "description" : "track number",
            "format" : "int32",
            "example" : 4
          }
        }
      },
      "Albums_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/Albums_Attributes"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/Albums_Relationships"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          }
        }
      },
      "Providers_Attributes" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Provider name. Conditionally visible.",
            "example" : "Columbia/Legacy"
          }
        }
      },
      "Providers_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/Providers_Attributes"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          }
        }
      },
      "UserRecommendations_Attributes" : {
        "type" : "object"
      },
      "UserRecommendations_Relationships" : {
        "required" : [ "discoveryMixes", "myMixes", "newArrivalMixes" ],
        "properties" : {
          "discoveryMixes" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "newArrivalMixes" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "myMixes" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          }
        }
      },
      "UserRecommendations_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/UserRecommendations_Attributes"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/UserRecommendations_Relationships"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          }
        }
      },
      "UserEntitlements_Attributes" : {
        "required" : [ "entitlements" ],
        "type" : "object",
        "properties" : {
          "entitlements" : {
            "type" : "array",
            "description" : "entitlements for user",
            "items" : {
              "type" : "string",
              "description" : "entitlements for user",
              "enum" : [ "MUSIC", "DJ" ]
            }
          }
        }
      },
      "UserEntitlements_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/UserEntitlements_Attributes"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          }
        }
      },
      "Videos_Attributes" : {
        "required" : [ "duration", "explicit", "isrc", "popularity", "title" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "Album item's title",
            "example" : "Kill Jay Z"
          },
          "version" : {
            "type" : "string",
            "description" : "Version of the album's item; complements title",
            "example" : "Kill Jay Z"
          },
          "isrc" : {
            "type" : "string",
            "description" : "ISRC code",
            "example" : "TIDAL2274"
          },
          "duration" : {
            "type" : "string",
            "description" : "Duration expressed in accordance with ISO 8601",
            "example" : "P30M5S"
          },
          "copyright" : {
            "type" : "string",
            "description" : "Copyright information",
            "example" : "(p)(c) 2017 S. CARTER ENTERPRISES, LLC. MARKETED BY ROC NATION & DISTRIBUTED BY ROC NATION/UMG RECORDINGS INC."
          },
          "releaseDate" : {
            "type" : "string",
            "description" : "Release date (ISO-8601)",
            "format" : "date",
            "example" : "2017-06-27"
          },
          "explicit" : {
            "type" : "boolean",
            "description" : "Indicates whether a catalog item consist of any explicit content",
            "example" : false
          },
          "popularity" : {
            "type" : "number",
            "description" : "Track or video popularity (ranged in 0.00 ... 1.00). Conditionally visible",
            "format" : "double",
            "example" : 0.56
          },
          "availability" : {
            "type" : "array",
            "description" : "Defines a catalog item availability e.g. for streaming, DJs, stems",
            "items" : {
              "type" : "string",
              "enum" : [ "STREAM", "DJ", "STEM" ]
            }
          },
          "imageLinks" : {
            "type" : "array",
            "description" : "Represents available links to, and metadata about, an album item images",
            "items" : {
              "$ref" : "#/components/schemas/Catalogue_Item_Image_Link"
            }
          },
          "externalLinks" : {
            "type" : "array",
            "description" : "Represents available links to something that is related to a catalog item, but external to the TIDAL API",
            "items" : {
              "$ref" : "#/components/schemas/Catalogue_Item_External_Link"
            }
          }
        }
      },
      "Videos_Relationships" : {
        "required" : [ "albums", "artists", "providers" ],
        "properties" : {
          "albums" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "artists" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          },
          "providers" : {
            "$ref" : "#/components/schemas/Multi_Data_Relationship_Doc"
          }
        }
      },
      "Videos_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/Videos_Attributes"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/Videos_Relationships"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          }
        }
      },
      "Users_Attributes" : {
        "required" : [ "country", "username" ],
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "description" : "user name",
            "example" : "username"
          },
          "country" : {
            "type" : "string",
            "description" : "ISO 3166-1 alpha-2 country code",
            "example" : "US"
          },
          "email" : {
            "type" : "string",
            "description" : "email address",
            "example" : "test@test.com"
          },
          "emailVerified" : {
            "type" : "boolean",
            "description" : "Is the email verified",
            "example" : true
          },
          "firstName" : {
            "type" : "string",
            "description" : "Users first name",
            "example" : "John"
          },
          "lastName" : {
            "type" : "string",
            "description" : "Users last name",
            "example" : "Rambo"
          }
        }
      },
      "Users_Relationships" : {
        "required" : [ "entitlements", "publicProfile", "recommendations" ],
        "properties" : {
          "entitlements" : {
            "$ref" : "#/components/schemas/Singleton_Data_Relationship_Doc"
          },
          "publicProfile" : {
            "$ref" : "#/components/schemas/Singleton_Data_Relationship_Doc"
          },
          "recommendations" : {
            "$ref" : "#/components/schemas/Singleton_Data_Relationship_Doc"
          }
        }
      },
      "Users_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/Users_Attributes"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/Users_Relationships"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          }
        }
      },
      "ArtistRoles_Attributes" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        }
      },
      "ArtistRoles_Resource" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/ArtistRoles_Attributes"
          },
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "id" : {
            "type" : "string",
            "description" : "resource unique identifier",
            "example" : "12345"
          },
          "type" : {
            "type" : "string",
            "description" : "resource unique type",
            "example" : "tracks"
          }
        }
      },
      "CreatePlaylistBody" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CreatePlaylistBody_Data"
          }
        }
      },
      "CreatePlaylistBody_Data" : {
        "required" : [ "attributes", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/CreatePlaylistBody_Data_Attributes"
          }
        }
      },
      "CreatePlaylistBody_Data_Attributes" : {
        "required" : [ "name", "privacy" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "privacy" : {
            "type" : "string",
            "enum" : [ "PUBLIC", "PRIVATE" ]
          }
        }
      },
      "UpdatePlaylistBody" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UpdatePlaylistBody_Data"
          }
        }
      },
      "UpdatePlaylistBody_Data" : {
        "required" : [ "attributes", "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/UpdatePlaylistBody_Data_Attributes"
          }
        }
      },
      "UpdatePlaylistBody_Data_Attributes" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "privacy" : {
            "type" : "string",
            "enum" : [ "PUBLIC", "PRIVATE" ]
          }
        }
      }
    },
    "examples" : {
      "Unsupported_Media_Type_Error_Doc" : {
        "value" : "{\n  \"errors\": [\n    {\n      \"id\": \"880e8400-e29b-41d4-a716-446655440000\",\n      \"status\": \"415\",\n      \"code\": \"UNSUPPORTED_MEDIA_TYPE\",\n      \"detail\": \"Unsupported request media type: application/json. Expected media type format: application/vnd.api+json\",\n      \"meta\": {\n        \"category\": \"INVALID_REQUEST_ERROR\"\n      }\n    }\n  ]\n}\n"
      },
      "Bad_Request_Error_Doc" : {
        "value" : "{\n  \"errors\": [\n    {\n      \"id\": \"550e8400-e29b-41d4-a716-446655440000\",\n      \"status\": \"400\",\n      \"code\": \"INVALID_ENUM_VALUE\",\n      \"detail\": \"country code must be in ISO2 format\",\n      \"source\": {\n        \"parameter\": \"countryCode\"\n      },\n      \"meta\": {\n        \"category\": \"INVALID_REQUEST_ERROR\"\n      }\n    },\n    {\n      \"id\": \"770e8400-e29b-41d4-a716-446655440000\",\n      \"status\": \"400\",\n      \"code\": \"VALUE_REGEX_MISMATCH\",\n      \"detail\": \"barcode should have a valid EAN-13 or UPC-A format\",\n      \"source\": {\n        \"parameter\": \"filter[barcodeId]\"\n      },\n      \"meta\": {\n        \"category\": \"INVALID_REQUEST_ERROR\"\n      }\n    }\n  ]\n}\n"
      },
      "Internal_Server_Error_Doc" : {
        "value" : "{\n  \"errors\": [\n    {\n      \"id\": \"120e8400-e29b-41d4-a716-446655440000\",\n      \"status\": \"500\",\n      \"code\": \"INTERNAL_SERVER_ERROR\",\n      \"detail\": \"The service encountered an error\",\n      \"meta\": {\n        \"category\": \"API_ERROR\"\n      }\n    }\n  ]\n}\n"
      },
      "Not_Acceptable_Error_Doc" : {
        "value" : "{\n  \"errors\": [\n    {\n      \"id\": \"570e8400-e29b-41d4-a716-446655440000\",\n      \"status\": \"406\",\n      \"code\": \"NOT_ACCEPTABLE\",\n      \"detail\": \"Not acceptable response media type on client: application/xml\",\n      \"meta\": {\n        \"category\": \"INVALID_REQUEST_ERROR\"\n      }\n    }\n  ]\n}\n"
      },
      "Method_Not_Supported_Error_Doc" : {
        "value" : "{\n  \"errors\": [\n    {\n      \"id\": \"320e8400-e29b-41d4-a716-446655440000\",\n      \"status\": \"405\",\n      \"code\": \"METHOD_NOT_SUPPORTED\",\n      \"detail\": \"The resource doesnt support the requested HTTP method: POST\",\n      \"meta\": {\n        \"category\": \"INVALID_REQUEST_ERROR\"\n      }\n    }\n  ]\n}\n"
      },
      "Resource_Not_Found_Error_Doc" : {
        "value" : "{\n  \"errors\": [\n    {\n      \"id\": \"770e8400-e29b-41d4-a716-446655440000\",\n      \"status\": \"404\",\n      \"code\": \"NOT_FOUND\",\n      \"detail\": \"Resource for a given 'id' is not found\",\n      \"meta\": {\n        \"category\": \"INVALID_REQUEST_ERROR\"\n      }\n    }\n  ]\n}\n"
      },
      "Unavailable_For_Legal_Reasons_Doc" : {
        "value" : "{\n  \"errors\": [\n    {\n      \"id\": \"490e8400-e29b-41d4-a716-446655440000\",\n      \"status\": \"451\",\n      \"code\": \"UNAVAILABLE_FOR_LEGAL_REASONS_RESPONSE\",\n      \"detail\": \"Unavailable due to demand from the right-holders to prohibit access to the resource.\",\n      \"meta\": {\n        \"category\": \"INVALID_REQUEST_ERROR\"\n      }\n    }\n  ]\n}\n"
      }
    },
    "securitySchemes" : {
      "Authorization_Code_PKCE" : {
        "type" : "oauth2",
        "description" : "Use this grant flow to access users private data e.g. user personal details",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://login.tidal.com/",
            "tokenUrl" : "https://auth.tidal.com/v1/",
            "scopes" : {
              "user.read" : "Read access to a user's account information, such as country and email address.",
              "entitlements.read" : "Read access to a user's entitlements",
              "playlists.read" : "Read access to a user's playlists",
              "recommendations.read" : "Read access to a user's recommendations",
              "public-profile.read" : "Read access to a user's public profile",
              "public-profile.write" : "Write access to a user's public profile"
            }
          }
        },
        "x-scopes-required-access-tier" : {
          "user.read" : "THIRD_PARTY",
          "entitlements.read" : "THIRD_PARTY",
          "playlists.read" : "THIRD_PARTY",
          "recommendations.read" : "THIRD_PARTY",
          "public-profile.read" : "INTERNAL",
          "public-profile.write" : "INTERNAL"
        }
      },
      "Client_Credentials" : {
        "type" : "oauth2",
        "description" : "Use this grant flow to access public user data e.g. public user profile",
        "flows" : {
          "clientCredentials" : {
            "tokenUrl" : "https://auth.tidal.com/v1/",
            "scopes" : { }
          }
        }
      }
    }
  }
}