//
// TrackFilesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal class TrackFilesAPI {

    /**
     Get single trackFile.
     
     - parameter id: (path)  
     - parameter formats: (query)  
     - parameter usage: (query)  
     - returns: TrackFilesSingleDataDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func trackFilesIdGet(id: String, formats: String, usage: String) async throws -> TrackFilesSingleDataDocument {
        return try await trackFilesIdGetWithRequestBuilder(id: id, formats: formats, usage: usage).execute().body
    }

    /**
     Get single trackFile.
     - GET /trackFiles/{id}
     - Retrieves single trackFile by id.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - OAuth:
       - type: oauth2
       - name: Client_Credentials
     - parameter id: (path)  
     - parameter formats: (query)  
     - parameter usage: (query)  
     - returns: RequestBuilder<TrackFilesSingleDataDocument> 
     */
    internal class func trackFilesIdGetWithRequestBuilder(id: String, formats: String, usage: String) -> RequestBuilder<TrackFilesSingleDataDocument> {
        var localVariablePath = "/trackFiles/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "formats": (wrappedValue: formats.encodeToJSON(), isExplode: true),
            "usage": (wrappedValue: usage.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<TrackFilesSingleDataDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
