//
// SharesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal class SharesAPI {

    /**
     Get multiple shares.
     
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: owners, sharedResources (optional)
     - parameter filterCode: (query) Share code (optional)
     - parameter filterId: (query) User share id (optional)
     - returns: SharesMultiResourceDataDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func sharesGet(include: [String]? = nil, filterCode: [String]? = nil, filterId: [String]? = nil) async throws -> SharesMultiResourceDataDocument {
        return try await sharesGetWithRequestBuilder(include: include, filterCode: filterCode, filterId: filterId).execute().body
    }

    /**
     Get multiple shares.
     - GET /shares
     - Retrieves multiple shares by available filters, or without if applicable.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - OAuth:
       - type: oauth2
       - name: Client_Credentials
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: owners, sharedResources (optional)
     - parameter filterCode: (query) Share code (optional)
     - parameter filterId: (query) User share id (optional)
     - returns: RequestBuilder<SharesMultiResourceDataDocument> 
     */
    internal class func sharesGetWithRequestBuilder(include: [String]? = nil, filterCode: [String]? = nil, filterId: [String]? = nil) -> RequestBuilder<SharesMultiResourceDataDocument> {
        let localVariablePath = "/shares"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: true),
            "filter[code]": (wrappedValue: filterCode?.encodeToJSON(), isExplode: true),
            "filter[id]": (wrappedValue: filterId?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SharesMultiResourceDataDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get single share.
     
     - parameter id: (path) User share id 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: owners, sharedResources (optional)
     - returns: SharesSingleResourceDataDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func sharesIdGet(id: String, include: [String]? = nil) async throws -> SharesSingleResourceDataDocument {
        return try await sharesIdGetWithRequestBuilder(id: id, include: include).execute().body
    }

    /**
     Get single share.
     - GET /shares/{id}
     - Retrieves single share by id.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - OAuth:
       - type: oauth2
       - name: Client_Credentials
     - parameter id: (path) User share id 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: owners, sharedResources (optional)
     - returns: RequestBuilder<SharesSingleResourceDataDocument> 
     */
    internal class func sharesIdGetWithRequestBuilder(id: String, include: [String]? = nil) -> RequestBuilder<SharesSingleResourceDataDocument> {
        var localVariablePath = "/shares/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SharesSingleResourceDataDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get owners relationship (\"to-many\").
     
     - parameter id: (path) User share id 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: owners (optional)
     - parameter pageCursor: (query) Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified (optional)
     - returns: SharesMultiRelationshipDataDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func sharesIdRelationshipsOwnersGet(id: String, include: [String]? = nil, pageCursor: String? = nil) async throws -> SharesMultiRelationshipDataDocument {
        return try await sharesIdRelationshipsOwnersGetWithRequestBuilder(id: id, include: include, pageCursor: pageCursor).execute().body
    }

    /**
     Get owners relationship (\"to-many\").
     - GET /shares/{id}/relationships/owners
     - Retrieves owners relationship.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - parameter id: (path) User share id 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: owners (optional)
     - parameter pageCursor: (query) Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified (optional)
     - returns: RequestBuilder<SharesMultiRelationshipDataDocument> 
     */
    internal class func sharesIdRelationshipsOwnersGetWithRequestBuilder(id: String, include: [String]? = nil, pageCursor: String? = nil) -> RequestBuilder<SharesMultiRelationshipDataDocument> {
        var localVariablePath = "/shares/{id}/relationships/owners"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: true),
            "page[cursor]": (wrappedValue: pageCursor?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SharesMultiRelationshipDataDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get sharedResources relationship (\"to-many\").
     
     - parameter id: (path) User share id 
     - parameter pageCursor: (query) Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified (optional)
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: sharedResources (optional)
     - returns: SharesMultiRelationshipDataDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func sharesIdRelationshipsSharedResourcesGet(id: String, pageCursor: String? = nil, include: [String]? = nil) async throws -> SharesMultiRelationshipDataDocument {
        return try await sharesIdRelationshipsSharedResourcesGetWithRequestBuilder(id: id, pageCursor: pageCursor, include: include).execute().body
    }

    /**
     Get sharedResources relationship (\"to-many\").
     - GET /shares/{id}/relationships/sharedResources
     - Retrieves sharedResources relationship.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - OAuth:
       - type: oauth2
       - name: Client_Credentials
     - parameter id: (path) User share id 
     - parameter pageCursor: (query) Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified (optional)
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: sharedResources (optional)
     - returns: RequestBuilder<SharesMultiRelationshipDataDocument> 
     */
    internal class func sharesIdRelationshipsSharedResourcesGetWithRequestBuilder(id: String, pageCursor: String? = nil, include: [String]? = nil) -> RequestBuilder<SharesMultiRelationshipDataDocument> {
        var localVariablePath = "/shares/{id}/relationships/sharedResources"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page[cursor]": (wrappedValue: pageCursor?.encodeToJSON(), isExplode: true),
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SharesMultiRelationshipDataDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Create single share.
     
     - parameter sharesCreateOperationPayload: (body)  (optional)
     - returns: SharesSingleResourceDataDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func sharesPost(sharesCreateOperationPayload: SharesCreateOperationPayload? = nil) async throws -> SharesSingleResourceDataDocument {
        return try await sharesPostWithRequestBuilder(sharesCreateOperationPayload: sharesCreateOperationPayload).execute().body
    }

    /**
     Create single share.
     - POST /shares
     - Creates a new share.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - parameter sharesCreateOperationPayload: (body)  (optional)
     - returns: RequestBuilder<SharesSingleResourceDataDocument> 
     */
    internal class func sharesPostWithRequestBuilder(sharesCreateOperationPayload: SharesCreateOperationPayload? = nil) -> RequestBuilder<SharesSingleResourceDataDocument> {
        let localVariablePath = "/shares"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: sharesCreateOperationPayload)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/vnd.api+json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SharesSingleResourceDataDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
