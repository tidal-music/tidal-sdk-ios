//
// GenresAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal class GenresAPI {

    /**
     Get multiple genres.
     
     - parameter pageCursor: (query) Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified (optional)
     - parameter filterId: (query) Allows filtering by genre id(s). USER_SELECTABLE is special value used to return specific genres which users can select from (optional)
     - returns: GenresMultiResourceDataDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func genresGet(pageCursor: String? = nil, filterId: [String]? = nil) async throws -> GenresMultiResourceDataDocument {
        return try await genresGetWithRequestBuilder(pageCursor: pageCursor, filterId: filterId).execute().body
    }

    /**
     Get multiple genres.
     - GET /genres
     - Retrieves multiple genres by available filters, or without if applicable.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - OAuth:
       - type: oauth2
       - name: Client_Credentials
     - parameter pageCursor: (query) Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified (optional)
     - parameter filterId: (query) Allows filtering by genre id(s). USER_SELECTABLE is special value used to return specific genres which users can select from (optional)
     - returns: RequestBuilder<GenresMultiResourceDataDocument> 
     */
    internal class func genresGetWithRequestBuilder(pageCursor: String? = nil, filterId: [String]? = nil) -> RequestBuilder<GenresMultiResourceDataDocument> {
        let localVariablePath = "/genres"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page[cursor]": (wrappedValue: pageCursor?.encodeToJSON(), isExplode: true),
            "filter[id]": (wrappedValue: filterId?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GenresMultiResourceDataDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get single genre.
     
     - parameter id: (path) Genre id 
     - returns: GenresSingleResourceDataDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func genresIdGet(id: String) async throws -> GenresSingleResourceDataDocument {
        return try await genresIdGetWithRequestBuilder(id: id).execute().body
    }

    /**
     Get single genre.
     - GET /genres/{id}
     - Retrieves single genre by id.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - OAuth:
       - type: oauth2
       - name: Client_Credentials
     - parameter id: (path) Genre id 
     - returns: RequestBuilder<GenresSingleResourceDataDocument> 
     */
    internal class func genresIdGetWithRequestBuilder(id: String) -> RequestBuilder<GenresSingleResourceDataDocument> {
        var localVariablePath = "/genres/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GenresSingleResourceDataDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
