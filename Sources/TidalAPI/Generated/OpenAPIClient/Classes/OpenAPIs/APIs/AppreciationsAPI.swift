//
// AppreciationsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal class AppreciationsAPI {

    /**
     Create single appreciation.
     
     - parameter appreciationsCreateOperationPayload: (body)  (optional)
     - returns: AppreciationsSingleResourceDataDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func appreciationsPost(appreciationsCreateOperationPayload: AppreciationsCreateOperationPayload? = nil) async throws -> AppreciationsSingleResourceDataDocument {
        return try await appreciationsPostWithRequestBuilder(appreciationsCreateOperationPayload: appreciationsCreateOperationPayload).execute().body
    }

    /**
     Create single appreciation.
     - POST /appreciations
     - Creates a new appreciation.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - parameter appreciationsCreateOperationPayload: (body)  (optional)
     - returns: RequestBuilder<AppreciationsSingleResourceDataDocument> 
     */
    internal class func appreciationsPostWithRequestBuilder(appreciationsCreateOperationPayload: AppreciationsCreateOperationPayload? = nil) -> RequestBuilder<AppreciationsSingleResourceDataDocument> {
        let localVariablePath = "/appreciations"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: appreciationsCreateOperationPayload)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/vnd.api+json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AppreciationsSingleResourceDataDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
