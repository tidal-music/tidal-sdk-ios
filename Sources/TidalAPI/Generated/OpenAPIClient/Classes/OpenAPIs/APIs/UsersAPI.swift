//
// UsersAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal class UsersAPI {

    /**
     Get all users
     
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: entitlements, publicProfile, recommendations (optional)
     - parameter filterId: (query) Allows to filter the collection of resources based on id attribute value (optional)
     - returns: UsersMultiDataDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func usersGet(include: [String]? = nil, filterId: [String]? = nil) async throws -> UsersMultiDataDocument {
        return try await usersGetWithRequestBuilder(include: include, filterId: filterId).execute().body
    }

    /**
     Get all users
     - GET /users
     - Retrieves all user details by available filters or without (if applicable).
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: entitlements, publicProfile, recommendations (optional)
     - parameter filterId: (query) Allows to filter the collection of resources based on id attribute value (optional)
     - returns: RequestBuilder<UsersMultiDataDocument> 
     */
    internal class func usersGetWithRequestBuilder(include: [String]? = nil, filterId: [String]? = nil) -> RequestBuilder<UsersMultiDataDocument> {
        let localVariablePath = "/users"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: true),
            "filter[id]": (wrappedValue: filterId?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UsersMultiDataDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get single user
     
     - parameter id: (path) User id 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: entitlements, publicProfile, recommendations (optional)
     - returns: UsersSingleDataDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func usersIdGet(id: String, include: [String]? = nil) async throws -> UsersSingleDataDocument {
        return try await usersIdGetWithRequestBuilder(id: id, include: include).execute().body
    }

    /**
     Get single user
     - GET /users/{id}
     - Retrieves user details by an unique id.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - parameter id: (path) User id 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: entitlements, publicProfile, recommendations (optional)
     - returns: RequestBuilder<UsersSingleDataDocument> 
     */
    internal class func usersIdGetWithRequestBuilder(id: String, include: [String]? = nil) -> RequestBuilder<UsersSingleDataDocument> {
        var localVariablePath = "/users/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UsersSingleDataDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Relationship: entitlements(read)
     
     - parameter id: (path) User id 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: entitlements (optional)
     - returns: UsersSingletonDataRelationshipDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func usersIdRelationshipsEntitlementsGet(id: String, include: [String]? = nil) async throws -> UsersSingletonDataRelationshipDocument {
        return try await usersIdRelationshipsEntitlementsGetWithRequestBuilder(id: id, include: include).execute().body
    }

    /**
     Relationship: entitlements(read)
     - GET /users/{id}/relationships/entitlements
     - Retrieves entitlements relationship details of the related user resource.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - parameter id: (path) User id 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: entitlements (optional)
     - returns: RequestBuilder<UsersSingletonDataRelationshipDocument> 
     */
    internal class func usersIdRelationshipsEntitlementsGetWithRequestBuilder(id: String, include: [String]? = nil) -> RequestBuilder<UsersSingletonDataRelationshipDocument> {
        var localVariablePath = "/users/{id}/relationships/entitlements"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UsersSingletonDataRelationshipDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Relationship: publicProfile(read)
     
     - parameter id: (path) User id 
     - parameter locale: (query) BCP47 locale code 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: publicProfile (optional)
     - returns: UsersSingletonDataRelationshipDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func usersIdRelationshipsPublicProfileGet(id: String, locale: String, include: [String]? = nil) async throws -> UsersSingletonDataRelationshipDocument {
        return try await usersIdRelationshipsPublicProfileGetWithRequestBuilder(id: id, locale: locale, include: include).execute().body
    }

    /**
     Relationship: publicProfile(read)
     - GET /users/{id}/relationships/publicProfile
     - Retrieves publicProfile relationship details of the related user resource.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - parameter id: (path) User id 
     - parameter locale: (query) BCP47 locale code 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: publicProfile (optional)
     - returns: RequestBuilder<UsersSingletonDataRelationshipDocument> 
     */
    internal class func usersIdRelationshipsPublicProfileGetWithRequestBuilder(id: String, locale: String, include: [String]? = nil) -> RequestBuilder<UsersSingletonDataRelationshipDocument> {
        var localVariablePath = "/users/{id}/relationships/publicProfile"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "locale": (wrappedValue: locale.encodeToJSON(), isExplode: true),
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UsersSingletonDataRelationshipDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Relationship: recommendations(read)
     
     - parameter id: (path) User id 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: recommendations (optional)
     - returns: UsersSingletonDataRelationshipDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func usersIdRelationshipsRecommendationsGet(id: String, include: [String]? = nil) async throws -> UsersSingletonDataRelationshipDocument {
        return try await usersIdRelationshipsRecommendationsGetWithRequestBuilder(id: id, include: include).execute().body
    }

    /**
     Relationship: recommendations(read)
     - GET /users/{id}/relationships/recommendations
     - Retrieves recommendations relationship details of the related user resource.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - parameter id: (path) User id 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: recommendations (optional)
     - returns: RequestBuilder<UsersSingletonDataRelationshipDocument> 
     */
    internal class func usersIdRelationshipsRecommendationsGetWithRequestBuilder(id: String, include: [String]? = nil) -> RequestBuilder<UsersSingletonDataRelationshipDocument> {
        var localVariablePath = "/users/{id}/relationships/recommendations"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UsersSingletonDataRelationshipDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get current user's user data
     
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: entitlements, publicProfile, recommendations (optional)
     - returns: UsersSingleDataDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func usersMeGet(include: [String]? = nil) async throws -> UsersSingleDataDocument {
        return try await usersMeGetWithRequestBuilder(include: include).execute().body
    }

    /**
     Get current user's user data
     - GET /users/me
     - Retrieves current user's user details.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: entitlements, publicProfile, recommendations (optional)
     - returns: RequestBuilder<UsersSingleDataDocument> 
     */
    internal class func usersMeGetWithRequestBuilder(include: [String]? = nil) -> RequestBuilder<UsersSingleDataDocument> {
        let localVariablePath = "/users/me"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UsersSingleDataDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
