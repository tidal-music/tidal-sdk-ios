//
// UserCollectionFoldersAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal class UserCollectionFoldersAPI {

    /**
     Get multiple userCollectionFolders.
     
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: items, owners (optional)
     - parameter filterId: (query) Folder Id (optional)
     - returns: UserCollectionFoldersMultiResourceDataDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func userCollectionFoldersGet(include: [String]? = nil, filterId: [String]? = nil) async throws -> UserCollectionFoldersMultiResourceDataDocument {
        return try await userCollectionFoldersGetWithRequestBuilder(include: include, filterId: filterId).execute().body
    }

    /**
     Get multiple userCollectionFolders.
     - GET /userCollectionFolders
     - Retrieves multiple userCollectionFolders by available filters, or without if applicable.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: items, owners (optional)
     - parameter filterId: (query) Folder Id (optional)
     - returns: RequestBuilder<UserCollectionFoldersMultiResourceDataDocument> 
     */
    internal class func userCollectionFoldersGetWithRequestBuilder(include: [String]? = nil, filterId: [String]? = nil) -> RequestBuilder<UserCollectionFoldersMultiResourceDataDocument> {
        let localVariablePath = "/userCollectionFolders"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: true),
            "filter[id]": (wrappedValue: filterId?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UserCollectionFoldersMultiResourceDataDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Delete single userCollectionFolder.
     
     - parameter id: (path) Folder Id 
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func userCollectionFoldersIdDelete(id: String) async throws {
        return try await userCollectionFoldersIdDeleteWithRequestBuilder(id: id).execute().body
    }

    /**
     Delete single userCollectionFolder.
     - DELETE /userCollectionFolders/{id}
     - Deletes existing userCollectionFolder.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - parameter id: (path) Folder Id 
     - returns: RequestBuilder<Void> 
     */
    internal class func userCollectionFoldersIdDeleteWithRequestBuilder(id: String) -> RequestBuilder<Void> {
        var localVariablePath = "/userCollectionFolders/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = OpenAPIClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get single userCollectionFolder.
     
     - parameter id: (path) Folder Id 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: items, owners (optional)
     - returns: UserCollectionFoldersSingleResourceDataDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func userCollectionFoldersIdGet(id: String, include: [String]? = nil) async throws -> UserCollectionFoldersSingleResourceDataDocument {
        return try await userCollectionFoldersIdGetWithRequestBuilder(id: id, include: include).execute().body
    }

    /**
     Get single userCollectionFolder.
     - GET /userCollectionFolders/{id}
     - Retrieves single userCollectionFolder by id.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - parameter id: (path) Folder Id 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: items, owners (optional)
     - returns: RequestBuilder<UserCollectionFoldersSingleResourceDataDocument> 
     */
    internal class func userCollectionFoldersIdGetWithRequestBuilder(id: String, include: [String]? = nil) -> RequestBuilder<UserCollectionFoldersSingleResourceDataDocument> {
        var localVariablePath = "/userCollectionFolders/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UserCollectionFoldersSingleResourceDataDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Update single userCollectionFolder.
     
     - parameter id: (path) Folder Id 
     - parameter folderUpdateOperationPayload: (body)  (optional)
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func userCollectionFoldersIdPatch(id: String, folderUpdateOperationPayload: FolderUpdateOperationPayload? = nil) async throws {
        return try await userCollectionFoldersIdPatchWithRequestBuilder(id: id, folderUpdateOperationPayload: folderUpdateOperationPayload).execute().body
    }

    /**
     Update single userCollectionFolder.
     - PATCH /userCollectionFolders/{id}
     - Updates existing userCollectionFolder.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - parameter id: (path) Folder Id 
     - parameter folderUpdateOperationPayload: (body)  (optional)
     - returns: RequestBuilder<Void> 
     */
    internal class func userCollectionFoldersIdPatchWithRequestBuilder(id: String, folderUpdateOperationPayload: FolderUpdateOperationPayload? = nil) -> RequestBuilder<Void> {
        var localVariablePath = "/userCollectionFolders/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: folderUpdateOperationPayload)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/vnd.api+json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = OpenAPIClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Delete from items relationship (\"to-many\").
     
     - parameter removePayload: (body)  (optional)
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func userCollectionFoldersIdRelationshipsItemsDelete(removePayload: RemovePayload? = nil) async throws {
        return try await userCollectionFoldersIdRelationshipsItemsDeleteWithRequestBuilder(removePayload: removePayload).execute().body
    }

    /**
     Delete from items relationship (\"to-many\").
     - DELETE /userCollectionFolders/{id}/relationships/items
     - Deletes item(s) from items relationship.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - parameter removePayload: (body)  (optional)
     - returns: RequestBuilder<Void> 
     */
    internal class func userCollectionFoldersIdRelationshipsItemsDeleteWithRequestBuilder(removePayload: RemovePayload? = nil) -> RequestBuilder<Void> {
        let localVariablePath = "/userCollectionFolders/{id}/relationships/items"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: removePayload)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/vnd.api+json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = OpenAPIClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter sort
     */
    public enum Sort_userCollectionFoldersIdRelationshipsItemsGet: String, CaseIterable {
        case ItemsAddedAtAsc = "items.addedAt"
        case ItemsAddedAtDesc = "-items.addedAt"
        case ItemsLastModifiedAtAsc = "items.lastModifiedAt"
        case ItemsLastModifiedAtDesc = "-items.lastModifiedAt"
        case ItemsNameAsc = "items.name"
        case ItemsNameDesc = "-items.name"
    }

    /**
     Get items relationship (\"to-many\").
     
     - parameter id: (path) Folder Id 
     - parameter pageCursor: (query) Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified (optional)
     - parameter sort: (query) Values prefixed with \&quot;-\&quot; are sorted descending; values without it are sorted ascending. (optional)
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: items (optional)
     - returns: UserCollectionFoldersItemsMultiRelationshipDataDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func userCollectionFoldersIdRelationshipsItemsGet(id: String, pageCursor: String? = nil, sort: [Sort_userCollectionFoldersIdRelationshipsItemsGet]? = nil, include: [String]? = nil) async throws -> UserCollectionFoldersItemsMultiRelationshipDataDocument {
        return try await userCollectionFoldersIdRelationshipsItemsGetWithRequestBuilder(id: id, pageCursor: pageCursor, sort: sort, include: include).execute().body
    }

    /**
     Get items relationship (\"to-many\").
     - GET /userCollectionFolders/{id}/relationships/items
     - Retrieves items relationship.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - parameter id: (path) Folder Id 
     - parameter pageCursor: (query) Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified (optional)
     - parameter sort: (query) Values prefixed with \&quot;-\&quot; are sorted descending; values without it are sorted ascending. (optional)
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: items (optional)
     - returns: RequestBuilder<UserCollectionFoldersItemsMultiRelationshipDataDocument> 
     */
    internal class func userCollectionFoldersIdRelationshipsItemsGetWithRequestBuilder(id: String, pageCursor: String? = nil, sort: [Sort_userCollectionFoldersIdRelationshipsItemsGet]? = nil, include: [String]? = nil) -> RequestBuilder<UserCollectionFoldersItemsMultiRelationshipDataDocument> {
        var localVariablePath = "/userCollectionFolders/{id}/relationships/items"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page[cursor]": (wrappedValue: pageCursor?.encodeToJSON(), isExplode: true),
            "sort": (wrappedValue: sort?.encodeToJSON(), isExplode: true),
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UserCollectionFoldersItemsMultiRelationshipDataDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Add to items relationship (\"to-many\").
     
     - parameter id: (path) Folder Id 
     - parameter addPayload: (body)  (optional)
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func userCollectionFoldersIdRelationshipsItemsPost(id: String, addPayload: AddPayload? = nil) async throws {
        return try await userCollectionFoldersIdRelationshipsItemsPostWithRequestBuilder(id: id, addPayload: addPayload).execute().body
    }

    /**
     Add to items relationship (\"to-many\").
     - POST /userCollectionFolders/{id}/relationships/items
     - Adds item(s) to items relationship.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - parameter id: (path) Folder Id 
     - parameter addPayload: (body)  (optional)
     - returns: RequestBuilder<Void> 
     */
    internal class func userCollectionFoldersIdRelationshipsItemsPostWithRequestBuilder(id: String, addPayload: AddPayload? = nil) -> RequestBuilder<Void> {
        var localVariablePath = "/userCollectionFolders/{id}/relationships/items"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: addPayload)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/vnd.api+json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = OpenAPIClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get owners relationship (\"to-many\").
     
     - parameter id: (path) Folder Id 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: owners (optional)
     - parameter pageCursor: (query) Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified (optional)
     - returns: UserCollectionFoldersMultiRelationshipDataDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func userCollectionFoldersIdRelationshipsOwnersGet(id: String, include: [String]? = nil, pageCursor: String? = nil) async throws -> UserCollectionFoldersMultiRelationshipDataDocument {
        return try await userCollectionFoldersIdRelationshipsOwnersGetWithRequestBuilder(id: id, include: include, pageCursor: pageCursor).execute().body
    }

    /**
     Get owners relationship (\"to-many\").
     - GET /userCollectionFolders/{id}/relationships/owners
     - Retrieves owners relationship.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - parameter id: (path) Folder Id 
     - parameter include: (query) Allows the client to customize which related resources should be returned. Available options: owners (optional)
     - parameter pageCursor: (query) Server-generated cursor value pointing a certain page of items. Optional, targets first page if not specified (optional)
     - returns: RequestBuilder<UserCollectionFoldersMultiRelationshipDataDocument> 
     */
    internal class func userCollectionFoldersIdRelationshipsOwnersGetWithRequestBuilder(id: String, include: [String]? = nil, pageCursor: String? = nil) -> RequestBuilder<UserCollectionFoldersMultiRelationshipDataDocument> {
        var localVariablePath = "/userCollectionFolders/{id}/relationships/owners"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: true),
            "page[cursor]": (wrappedValue: pageCursor?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UserCollectionFoldersMultiRelationshipDataDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Create single userCollectionFolder.
     
     - parameter folderCreateOperationPayload: (body)  (optional)
     - returns: UserCollectionFoldersSingleResourceDataDocument
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    internal class func userCollectionFoldersPost(folderCreateOperationPayload: FolderCreateOperationPayload? = nil) async throws -> UserCollectionFoldersSingleResourceDataDocument {
        return try await userCollectionFoldersPostWithRequestBuilder(folderCreateOperationPayload: folderCreateOperationPayload).execute().body
    }

    /**
     Create single userCollectionFolder.
     - POST /userCollectionFolders
     - Creates a new userCollectionFolder.
     - OAuth:
       - type: oauth2
       - name: Authorization_Code_PKCE
     - parameter folderCreateOperationPayload: (body)  (optional)
     - returns: RequestBuilder<UserCollectionFoldersSingleResourceDataDocument> 
     */
    internal class func userCollectionFoldersPostWithRequestBuilder(folderCreateOperationPayload: FolderCreateOperationPayload? = nil) -> RequestBuilder<UserCollectionFoldersSingleResourceDataDocument> {
        let localVariablePath = "/userCollectionFolders"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: folderCreateOperationPayload)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/vnd.api+json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UserCollectionFoldersSingleResourceDataDocument>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
