//
// ArtistsFollowersResourceMetaViewerContext.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Optional context about the relationship */
public struct ArtistsFollowersResourceMetaViewerContext: Codable, Hashable {

    /** Boolean to indicate if the artist is following my artist */
    public var followsMyArtist: Bool? = false
    /** Boolean to indicate if my artist is following the artist */
    public var myArtistFollows: Bool? = false

    public init(
        followsMyArtist: Bool? = false,
        myArtistFollows: Bool? = false
    ) {
        self.followsMyArtist = followsMyArtist
        self.myArtistFollows = myArtistFollows
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case followsMyArtist
        case myArtistFollows
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(followsMyArtist, forKey: .followsMyArtist)
        try container.encodeIfPresent(myArtistFollows, forKey: .myArtistFollows)
    }
}
