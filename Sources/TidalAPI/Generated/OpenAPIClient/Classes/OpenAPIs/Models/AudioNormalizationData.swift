//
// AudioNormalizationData.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Track normalization data */
public struct AudioNormalizationData: Codable, Hashable {

    public var peakAmplitude: Float?
    public var replayGain: Float?

    public init(
        peakAmplitude: Float? = nil,
        replayGain: Float? = nil
    ) {
        self.peakAmplitude = peakAmplitude
        self.replayGain = replayGain
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case peakAmplitude
        case replayGain
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(peakAmplitude, forKey: .peakAmplitude)
        try container.encodeIfPresent(replayGain, forKey: .replayGain)
    }
}
