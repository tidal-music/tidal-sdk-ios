//
// ErrorObject.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ErrorObject: Codable, Hashable {

    /** application-specific error code */
    public var code: String?
    /** human-readable explanation specific to this occurrence of the problem */
    public var detail: String?
    /** unique identifier for this particular occurrence of the problem */
    public var id: String?
    public var source: ErrorObjectSource?
    /** HTTP status code applicable to this problem */
    public var status: String?

    public init(
        code: String? = nil,
        detail: String? = nil,
        id: String? = nil,
        source: ErrorObjectSource? = nil,
        status: String? = nil
    ) {
        self.code = code
        self.detail = detail
        self.id = id
        self.source = source
        self.status = status
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case code
        case detail
        case id
        case source
        case status
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(code, forKey: .code)
        try container.encodeIfPresent(detail, forKey: .detail)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(source, forKey: .source)
        try container.encodeIfPresent(status, forKey: .status)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension ErrorObject: Identifiable {}

