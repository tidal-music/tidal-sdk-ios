//
// TracksAttributes.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct TracksAttributes: Codable, Hashable {

    public enum AccessType: String, Codable, CaseIterable {
        case _public = "PUBLIC"
        case unlisted = "UNLISTED"
        case _private = "PRIVATE"
    }
    public enum Availability: String, Codable, CaseIterable {
        case stream = "STREAM"
        case dj = "DJ"
        case stem = "STEM"
    }
    public enum Key: String, Codable, CaseIterable {
        case a = "A"
        case ab = "Ab"
        case b = "B"
        case bb = "Bb"
        case c = "C"
        case csharp = "CSharp"
        case d = "D"
        case e = "E"
        case eb = "Eb"
        case f = "F"
        case fsharp = "FSharp"
        case g = "G"
    }
    public enum KeyScale: String, Codable, CaseIterable {
        case major = "MAJOR"
        case minor = "MINOR"
    }
    /** Access type */
    public var accessType: AccessType?
    /** Available usage for this track */
    public var availability: [Availability]?
    /** Beats per minute */
    public var bpm: Float?
    /** Copyright */
    public var copyright: String?
    /** Datetime of track creation (ISO 8601) */
    public var createdAt: Date?
    /** Duration (ISO 8601) */
    public var duration: String
    /** Explicit content */
    public var explicit: Bool
    /** Track links external to TIDAL API */
    public var externalLinks: [ExternalLink]?
    public var genreTags: [String]?
    /** International Standard Recording Code (ISRC) */
    public var isrc: String
    /** Key */
    public var key: Key?
    /** The scale of the key */
    public var keyScale: KeyScale?
    public var mediaTags: [String]
    /** Popularity (0.0 - 1.0) */
    public var popularity: Double
    /** Is the track spotlighted? */
    public var spotlighted: Bool?
    /** Track title */
    public var title: String
    public var toneTags: [String]?
    /** Track version, complements title */
    public var version: String?

    public init(
        accessType: AccessType? = nil,
        availability: [Availability]? = nil,
        bpm: Float? = nil,
        copyright: String? = nil,
        createdAt: Date? = nil,
        duration: String,
        explicit: Bool,
        externalLinks: [ExternalLink]? = nil,
        genreTags: [String]? = nil,
        isrc: String,
        key: Key? = nil,
        keyScale: KeyScale? = nil,
        mediaTags: [String],
        popularity: Double,
        spotlighted: Bool? = nil,
        title: String,
        toneTags: [String]? = nil,
        version: String? = nil
    ) {
        self.accessType = accessType
        self.availability = availability
        self.bpm = bpm
        self.copyright = copyright
        self.createdAt = createdAt
        self.duration = duration
        self.explicit = explicit
        self.externalLinks = externalLinks
        self.genreTags = genreTags
        self.isrc = isrc
        self.key = key
        self.keyScale = keyScale
        self.mediaTags = mediaTags
        self.popularity = popularity
        self.spotlighted = spotlighted
        self.title = title
        self.toneTags = toneTags
        self.version = version
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case accessType
        case availability
        case bpm
        case copyright
        case createdAt
        case duration
        case explicit
        case externalLinks
        case genreTags
        case isrc
        case key
        case keyScale
        case mediaTags
        case popularity
        case spotlighted
        case title
        case toneTags
        case version
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(accessType, forKey: .accessType)
        try container.encodeIfPresent(availability, forKey: .availability)
        try container.encodeIfPresent(bpm, forKey: .bpm)
        try container.encodeIfPresent(copyright, forKey: .copyright)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
        try container.encode(duration, forKey: .duration)
        try container.encode(explicit, forKey: .explicit)
        try container.encodeIfPresent(externalLinks, forKey: .externalLinks)
        try container.encodeIfPresent(genreTags, forKey: .genreTags)
        try container.encode(isrc, forKey: .isrc)
        try container.encodeIfPresent(key, forKey: .key)
        try container.encodeIfPresent(keyScale, forKey: .keyScale)
        try container.encode(mediaTags, forKey: .mediaTags)
        try container.encode(popularity, forKey: .popularity)
        try container.encodeIfPresent(spotlighted, forKey: .spotlighted)
        try container.encode(title, forKey: .title)
        try container.encodeIfPresent(toneTags, forKey: .toneTags)
        try container.encodeIfPresent(version, forKey: .version)
    }
}


