//
// TracksAttributes.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct TracksAttributes: Codable, Hashable {

    public enum Key: String, Codable, CaseIterable {
        case a = "A"
        case ab = "Ab"
        case b = "B"
        case bb = "Bb"
        case c = "C"
        case csharp = "CSharp"
        case d = "D"
        case e = "E"
        case eb = "Eb"
        case f = "F"
        case fsharp = "FSharp"
        case g = "G"
    }
    public enum KeyScale: String, Codable, CaseIterable {
        case major = "MAJOR"
        case minor = "MINOR"
    }
    public enum AccessType: String, Codable, CaseIterable {
        case _public = "PUBLIC"
        case unlisted = "UNLISTED"
        case _private = "PRIVATE"
    }
    public enum Availability: String, Codable, CaseIterable {
        case stream = "STREAM"
        case dj = "DJ"
        case stem = "STEM"
    }
    /** Track title */
    public var title: String
    /** Track version, complements title */
    public var version: String?
    /** International Standard Recording Code (ISRC) */
    public var isrc: String
    /** Duration (ISO 8601) */
    public var duration: String
    /** Copyright */
    public var copyright: String?
    /** Explicit content */
    public var explicit: Bool
    /** Key */
    public var key: Key?
    /** The scale of the key */
    public var keyScale: KeyScale?
    /** Beats per minute */
    public var bpm: Float?
    /** Popularity (0.0 - 1.0) */
    public var popularity: Double
    /** Access type */
    public var accessType: AccessType?
    /** Available usage for this track */
    public var availability: [Availability]?
    public var mediaTags: [String]
    public var toneTags: [String]?
    public var genreTags: [String]?
    /** Track links external to TIDAL API */
    public var externalLinks: [ExternalLink]?
    /** Is the track spotlighted? */
    public var spotlighted: Bool?
    /** Datetime of track creation (ISO 8601) */
    public var createdAt: Date?

    public init(
        title: String,
        version: String? = nil,
        isrc: String,
        duration: String,
        copyright: String? = nil,
        explicit: Bool,
        key: Key? = nil,
        keyScale: KeyScale? = nil,
        bpm: Float? = nil,
        popularity: Double,
        accessType: AccessType? = nil,
        availability: [Availability]? = nil,
        mediaTags: [String],
        toneTags: [String]? = nil,
        genreTags: [String]? = nil,
        externalLinks: [ExternalLink]? = nil,
        spotlighted: Bool? = nil,
        createdAt: Date? = nil
    ) {
        self.title = title
        self.version = version
        self.isrc = isrc
        self.duration = duration
        self.copyright = copyright
        self.explicit = explicit
        self.key = key
        self.keyScale = keyScale
        self.bpm = bpm
        self.popularity = popularity
        self.accessType = accessType
        self.availability = availability
        self.mediaTags = mediaTags
        self.toneTags = toneTags
        self.genreTags = genreTags
        self.externalLinks = externalLinks
        self.spotlighted = spotlighted
        self.createdAt = createdAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case title
        case version
        case isrc
        case duration
        case copyright
        case explicit
        case key
        case keyScale
        case bpm
        case popularity
        case accessType
        case availability
        case mediaTags
        case toneTags
        case genreTags
        case externalLinks
        case spotlighted
        case createdAt
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(title, forKey: .title)
        try container.encodeIfPresent(version, forKey: .version)
        try container.encode(isrc, forKey: .isrc)
        try container.encode(duration, forKey: .duration)
        try container.encodeIfPresent(copyright, forKey: .copyright)
        try container.encode(explicit, forKey: .explicit)
        try container.encodeIfPresent(key, forKey: .key)
        try container.encodeIfPresent(keyScale, forKey: .keyScale)
        try container.encodeIfPresent(bpm, forKey: .bpm)
        try container.encode(popularity, forKey: .popularity)
        try container.encodeIfPresent(accessType, forKey: .accessType)
        try container.encodeIfPresent(availability, forKey: .availability)
        try container.encode(mediaTags, forKey: .mediaTags)
        try container.encodeIfPresent(toneTags, forKey: .toneTags)
        try container.encodeIfPresent(genreTags, forKey: .genreTags)
        try container.encodeIfPresent(externalLinks, forKey: .externalLinks)
        try container.encodeIfPresent(spotlighted, forKey: .spotlighted)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
    }
}


