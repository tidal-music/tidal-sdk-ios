//
// TracksRelationships.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct TracksRelationships: Codable, Hashable {

    public var albums: MultiRelationshipDataDocument
    public var artists: MultiRelationshipDataDocument
    public var genres: MultiRelationshipDataDocument
    public var lyrics: MultiRelationshipDataDocument
    public var owners: MultiRelationshipDataDocument
    public var providers: MultiRelationshipDataDocument
    public var radio: MultiRelationshipDataDocument
    public var shares: MultiRelationshipDataDocument
    public var similarTracks: MultiRelationshipDataDocument
    public var sourceFile: SingleRelationshipDataDocument
    public var trackStatistics: SingleRelationshipDataDocument

    public init(
        albums: MultiRelationshipDataDocument,
        artists: MultiRelationshipDataDocument,
        genres: MultiRelationshipDataDocument,
        lyrics: MultiRelationshipDataDocument,
        owners: MultiRelationshipDataDocument,
        providers: MultiRelationshipDataDocument,
        radio: MultiRelationshipDataDocument,
        shares: MultiRelationshipDataDocument,
        similarTracks: MultiRelationshipDataDocument,
        sourceFile: SingleRelationshipDataDocument,
        trackStatistics: SingleRelationshipDataDocument
    ) {
        self.albums = albums
        self.artists = artists
        self.genres = genres
        self.lyrics = lyrics
        self.owners = owners
        self.providers = providers
        self.radio = radio
        self.shares = shares
        self.similarTracks = similarTracks
        self.sourceFile = sourceFile
        self.trackStatistics = trackStatistics
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case albums
        case artists
        case genres
        case lyrics
        case owners
        case providers
        case radio
        case shares
        case similarTracks
        case sourceFile
        case trackStatistics
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(albums, forKey: .albums)
        try container.encode(artists, forKey: .artists)
        try container.encode(genres, forKey: .genres)
        try container.encode(lyrics, forKey: .lyrics)
        try container.encode(owners, forKey: .owners)
        try container.encode(providers, forKey: .providers)
        try container.encode(radio, forKey: .radio)
        try container.encode(shares, forKey: .shares)
        try container.encode(similarTracks, forKey: .similarTracks)
        try container.encode(sourceFile, forKey: .sourceFile)
        try container.encode(trackStatistics, forKey: .trackStatistics)
    }
}
