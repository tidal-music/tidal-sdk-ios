//
// ArtistsRelationships.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ArtistsRelationships: Codable, Hashable {

    public var albums: MultiRelationshipDataDocument
    public var biography: SingleRelationshipDataDocument
    public var followers: ArtistsFollowersMultiRelationshipDataDocument
    public var following: ArtistsFollowingMultiRelationshipDataDocument
    public var owners: MultiRelationshipDataDocument
    public var profileArt: MultiRelationshipDataDocument
    public var radio: MultiRelationshipDataDocument
    public var roles: MultiRelationshipDataDocument
    public var similarArtists: MultiRelationshipDataDocument
    public var trackProviders: ArtistsTrackProvidersMultiRelationshipDataDocument
    public var tracks: MultiRelationshipDataDocument
    public var videos: MultiRelationshipDataDocument

    public init(
        albums: MultiRelationshipDataDocument,
        biography: SingleRelationshipDataDocument,
        followers: ArtistsFollowersMultiRelationshipDataDocument,
        following: ArtistsFollowingMultiRelationshipDataDocument,
        owners: MultiRelationshipDataDocument,
        profileArt: MultiRelationshipDataDocument,
        radio: MultiRelationshipDataDocument,
        roles: MultiRelationshipDataDocument,
        similarArtists: MultiRelationshipDataDocument,
        trackProviders: ArtistsTrackProvidersMultiRelationshipDataDocument,
        tracks: MultiRelationshipDataDocument,
        videos: MultiRelationshipDataDocument
    ) {
        self.albums = albums
        self.biography = biography
        self.followers = followers
        self.following = following
        self.owners = owners
        self.profileArt = profileArt
        self.radio = radio
        self.roles = roles
        self.similarArtists = similarArtists
        self.trackProviders = trackProviders
        self.tracks = tracks
        self.videos = videos
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case albums
        case biography
        case followers
        case following
        case owners
        case profileArt
        case radio
        case roles
        case similarArtists
        case trackProviders
        case tracks
        case videos
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(albums, forKey: .albums)
        try container.encode(biography, forKey: .biography)
        try container.encode(followers, forKey: .followers)
        try container.encode(following, forKey: .following)
        try container.encode(owners, forKey: .owners)
        try container.encode(profileArt, forKey: .profileArt)
        try container.encode(radio, forKey: .radio)
        try container.encode(roles, forKey: .roles)
        try container.encode(similarArtists, forKey: .similarArtists)
        try container.encode(trackProviders, forKey: .trackProviders)
        try container.encode(tracks, forKey: .tracks)
        try container.encode(videos, forKey: .videos)
    }
}
