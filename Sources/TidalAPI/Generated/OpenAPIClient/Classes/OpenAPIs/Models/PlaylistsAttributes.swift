//
// PlaylistsAttributes.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PlaylistsAttributes: Codable, Hashable {

    public enum Privacy: String, Codable, CaseIterable {
        case _public = "PUBLIC"
        case _private = "PRIVATE"
    }
    public enum PlaylistType: String, Codable, CaseIterable {
        case editorial = "EDITORIAL"
        case user = "USER"
        case mix = "MIX"
        case artist = "ARTIST"
    }
    /** Playlist name */
    public var name: String
    /** Playlist description */
    public var description: String?
    /** Indicates if the playlist has a duration and set number of tracks */
    public var bounded: Bool
    /** Duration of playlist (ISO 8601) */
    public var duration: String?
    /** Number of items in the playlist */
    public var numberOfItems: Int?
    public var externalLinks: [ExternalLink]
    public var imageLinks: [ImageLink]
    /** Datetime of playlist creation (ISO 8601) */
    public var createdAt: Date
    /** Datetime of last modification of the playlist (ISO 8601) */
    public var lastModifiedAt: Date
    /** Privacy setting of the playlist */
    public var privacy: Privacy
    /** The type of the playlist */
    public var playlistType: PlaylistType

    public init(name: String, description: String? = nil, bounded: Bool, duration: String? = nil, numberOfItems: Int? = nil, externalLinks: [ExternalLink], imageLinks: [ImageLink], createdAt: Date, lastModifiedAt: Date, privacy: Privacy, playlistType: PlaylistType) {
        self.name = name
        self.description = description
        self.bounded = bounded
        self.duration = duration
        self.numberOfItems = numberOfItems
        self.externalLinks = externalLinks
        self.imageLinks = imageLinks
        self.createdAt = createdAt
        self.lastModifiedAt = lastModifiedAt
        self.privacy = privacy
        self.playlistType = playlistType
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case description
        case bounded
        case duration
        case numberOfItems
        case externalLinks
        case imageLinks
        case createdAt
        case lastModifiedAt
        case privacy
        case playlistType
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encode(bounded, forKey: .bounded)
        try container.encodeIfPresent(duration, forKey: .duration)
        try container.encodeIfPresent(numberOfItems, forKey: .numberOfItems)
        try container.encode(externalLinks, forKey: .externalLinks)
        try container.encode(imageLinks, forKey: .imageLinks)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(lastModifiedAt, forKey: .lastModifiedAt)
        try container.encode(privacy, forKey: .privacy)
        try container.encode(playlistType, forKey: .playlistType)
    }
}


