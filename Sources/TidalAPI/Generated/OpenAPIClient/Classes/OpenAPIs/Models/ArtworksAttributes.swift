//
// ArtworksAttributes.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ArtworksAttributes: Codable, Hashable {

    public enum MediaType: String, Codable, CaseIterable {
        case image = "IMAGE"
        case video = "VIDEO"
    }
    public static let mediaTypeRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    /** Artwork files */
    public var files: [ArtworkFile]
    /** Media type of artwork files */
    public var mediaType: MediaType
    public var sourceFile: ArtworkSourceFile?

    public init(
        files: [ArtworkFile],
        mediaType: MediaType,
        sourceFile: ArtworkSourceFile? = nil
    ) {
        self.files = files
        self.mediaType = mediaType
        self.sourceFile = sourceFile
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case files
        case mediaType
        case sourceFile
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(files, forKey: .files)
        try container.encode(mediaType, forKey: .mediaType)
        try container.encodeIfPresent(sourceFile, forKey: .sourceFile)
    }
}


