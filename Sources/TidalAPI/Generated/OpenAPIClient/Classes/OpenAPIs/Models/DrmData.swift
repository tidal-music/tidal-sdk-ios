//
// DrmData.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** DRM data. Absence implies no DRM. */
public struct DrmData: Codable, Hashable {

    public enum DrmSystem: String, Codable, CaseIterable {
        case fairplay = "FAIRPLAY"
        case widevine = "WIDEVINE"
    }
    public var certificateUrl: String?
    public var drmSystem: DrmSystem?
    public var licenseUrl: String?

    public init(
        certificateUrl: String? = nil,
        drmSystem: DrmSystem? = nil,
        licenseUrl: String? = nil
    ) {
        self.certificateUrl = certificateUrl
        self.drmSystem = drmSystem
        self.licenseUrl = licenseUrl
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case certificateUrl
        case drmSystem
        case licenseUrl
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(certificateUrl, forKey: .certificateUrl)
        try container.encodeIfPresent(drmSystem, forKey: .drmSystem)
        try container.encodeIfPresent(licenseUrl, forKey: .licenseUrl)
    }
}
